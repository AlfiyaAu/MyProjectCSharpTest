@page "/test"

@using BlazorWebAssemblyProjectTest.Shared;
@using Microsoft.EntityFrameworkCore;
@using BlazorWebAssemblyProjectTest; 


@inject NavigationManager NavigMened


@inject HttpClient Http

<Link href="/css/styles.css" rel="stylesheet" type="text/css" />

<PageTitle>Test</PageTitle>


@if (questions == null)
{
        <p><em>Load question...</em></p>
}
else
{
       <br />
            <br />
            <br />
        <div class="Question">
            <p> Я люблю изучать психологию и все что связано с мышлением</p>
        </div>
        <br />
        <div class="One_answer">
                <br />
                <br />
                <br />
            <button type="button" class="form_btm1" id="form_btm_id">  
                @foreach (var ansver in answers)
                    {
                        @ansver.Name
                    } 
            </button>

                <br />
                <button type="button" class="form_btm1" id="form_btm_id">  @* @ans1 *@ </button>
                <br />
            <button type="button" class="form_btm1" id="form_btm_id"> Скорее про меня </button>
                <br />
            <button type="button" class="form_btm1" id="form_btm_id"> Точно про меня </button>
                <br />
            <button type="button" class="form_btm1" id="form_btm_id"> Зутрудняюсь ответить </button>  
                <br />
        </div>

        <div class="Question">
            @foreach (var question in questions.Question)
                {
                    @question.Name
                }
        </div>

       @*  <div class="form_btm1"> 
        @foreach (var ansver in answers)
                {
                    @ansver.Name
                }
        </div> *@


        <div class="Next">
              <br />
        @if (questions.CurrentPage == questions.NumberPage)
        {
             <button class="form_btm" @onclick="OnResult"> Узнать результат </button>
        }
        else
        {
            <button class="form_btm" @onclick="Next"> Далее </button>  
        }

              <br />
        </div>
            <br />
        <div class="page">
            <span> @questions.CurrentPage / @questions.NumberPage </span>
        </div>

}

<!--  <h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> -->

@code {
    private QuestionPart questions;
    private Answer[]? answers;

    protected override async Task OnInitializedAsync()
    {
        await DataLoad (1);
        answers = await Http.GetFromJsonAsync<Answer[]>("api/question/");

    }

    private async Task Next()
    {
        if (questions.CurrentPage < questions.NumberPage)
        {
            await DataLoad(questions.CurrentPage + 1);
            await Http.GetFromJsonAsync<Answer[]>("api/question");

        }
    }

    private async Task DataLoad(int page)
    {
        questions = await Http.GetFromJsonAsync<QuestionPart>($"api/question/{page}");

    }

    // private async Task AnsTest()
    //     {
    //         answers = await Http.GetFromJsonAsync<Answer[]>("api/question");

    //     }

    public void OnResult()
    {
        NavigMened.NavigateTo("/result");
    }

    private async Task СalculationPersent()
    {
        var a1 = 0;
        var a2 = 0;
        var a3 = 0;

        var ans1 = answers.FirstOrDefault(x => x.SelfTypeId == 1);
        var ans2 = answers.FirstOrDefault(x => x.SelfTypeId == 2);
        var ans3 = answers.FirstOrDefault(x => x.SelfTypeId == 3);

        // if (ans1 == 1)
        // {
        //     a += 1;
        // }


        if (questions.CurrentPage == questions.NumberPage)
        {
            int SelfType1 = (a1 / (a1 + a2 + a3)) * 100;
            int SelfType2 = (a2 / (a1 + a2 + a3)) * 100;
            int SelfType3 = (a3 / (a1 + a2 + a3)) * 100;
        }

    }


}